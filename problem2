#include <iostream>
#include <omp.h>
#include <vector>
#include <fstream>

std::vector<int> sieve(int n){
    std::vector<bool> bools(n,true);
    std::vector<int> result;
    for (int i = 2; i < n; i++)
    {
        if(bools[i])
        {
        result.push_back(i);
        #pragma omp parallel for
        for (int j = i; j < n; j+=i)
        {
            bools[j] = false;
        }
        }

    }

    return result;
    }
    



int main()
{
    std::vector<int> nums = sieve(12);
    for(auto i:nums){
        std::cout << (i) << std::endl;
    }
}
